name: Dependency Auto-Update

on:
  schedule:
    - cron: '0 10 * * 1'  # Every Monday at 10:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Check for outdated dependencies
        id: check
        run: |
          flutter pub outdated --json > outdated.json || true

          # Parse and filter non-breaking updates
          if [ -f outdated.json ]; then
            # Count packages with updates
            PACKAGES_COUNT=$(cat outdated.json | grep -o '"package"' | wc -l || echo "0")
            echo "packages_count=$PACKAGES_COUNT" >> $GITHUB_OUTPUT

            if [ "$PACKAGES_COUNT" -gt 0 ]; then
              echo "has_updates=true" >> $GITHUB_OUTPUT
            else
              echo "has_updates=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Update non-breaking dependencies
        if: steps.check.outputs.has_updates == 'true'
        run: |
          # Update dependencies (non-major versions only)
          flutter pub upgrade --major-versions=false || flutter pub upgrade

          # Save pubspec.lock changes
          git diff pubspec.lock > dependency-changes.diff

      - name: Run tests
        if: steps.check.outputs.has_updates == 'true'
        id: tests
        run: |
          flutter pub get

          # Run tests
          flutter test > test_results.txt 2>&1 || true

          # Check if tests passed
          if grep -q "All tests passed" test_results.txt; then
            echo "tests_passed=true" >> $GITHUB_OUTPUT
          else
            echo "tests_passed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run analysis
        if: steps.check.outputs.has_updates == 'true' && steps.tests.outputs.tests_passed == 'true'
        id: analysis
        run: |
          flutter analyze > analysis_results.txt 2>&1 || true

          # Count issues (simple heuristic)
          ERROR_COUNT=$(grep -c "error •" analysis_results.txt || echo "0")
          echo "error_count=$ERROR_COUNT" >> $GITHUB_OUTPUT

          if [ "$ERROR_COUNT" -eq 0 ]; then
            echo "analysis_passed=true" >> $GITHUB_OUTPUT
          else
            echo "analysis_passed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: |
          steps.check.outputs.has_updates == 'true' &&
          steps.tests.outputs.tests_passed == 'true' &&
          steps.analysis.outputs.analysis_passed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): Update non-breaking dependencies'
          branch: automated/dependency-update-${{ github.run_number }}
          delete-branch: true
          title: '🔄 Automated Dependency Update'
          body: |
            ## 🤖 Automated Dependency Update

            This PR updates non-breaking dependencies to their latest compatible versions.

            ### ✅ Validation

            - ✅ Tests: All passed
            - ✅ Analysis: No errors
            - ✅ Only non-breaking updates included

            ### 📊 Changes

            ```diff
            ${{ steps.check.outputs.packages_count }} packages have available updates
            ```

            See `pubspec.lock` for detailed changes.

            ### 🔍 Manual Review Needed

            Please review:
            1. Breaking changes in changelogs
            2. New deprecation warnings
            3. Behavioral changes in updated packages

            ### 📚 References

            - [Flutter Pub Outdated](https://dart.dev/tools/pub/cmd/pub-outdated)
            - [Dependency Update Guide](docs/EFFICIENCY_BEST_PRACTICES.md)

            ---
            🤖 Auto-generated by Dependency Auto-Update workflow

            Co-Authored-By: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          labels: |
            dependencies
            automated
            chore
          reviewers: |
            ${{ github.repository_owner }}

      - name: Generate summary
        if: steps.check.outputs.has_updates == 'true'
        run: |
          echo "## 🔄 Dependency Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.tests.outputs.tests_passed }}" == "true" ] && [ "${{ steps.analysis.outputs.analysis_passed }}" == "true" ]; then
            echo "✅ **Status**: PR created successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Packages updated: ${{ steps.check.outputs.packages_count }}" >> $GITHUB_STEP_SUMMARY
            echo "- Tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
            echo "- Analysis: ✅ No errors" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Updates available but validation failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Tests: ${{ steps.tests.outputs.tests_passed == 'true' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
            echo "- Analysis: ${{ steps.analysis.outputs.analysis_passed == 'true' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "💡 Manual update required - check logs for details" >> $GITHUB_STEP_SUMMARY
          fi

      - name: No updates available
        if: steps.check.outputs.has_updates == 'false'
        run: |
          echo "## ✅ Dependencies Up to Date" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All dependencies are already at their latest compatible versions." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Next check: Next Monday at 10:00 UTC" >> $GITHUB_STEP_SUMMARY
